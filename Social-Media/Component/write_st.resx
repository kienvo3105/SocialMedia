<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pic_addpic.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAARASURBVHhe7ZrNaxNBHIYrXvyCphU9ePDr4EU8+AfoQTwr
        +AXas1r14kkEURSqp+KlScRvq7ubNGjT0jZakzTNtt16V9FCD1ZFLQgmG28K40ydYWPyNsnObhY37AsP
        lGbmxz5vdjcbSFuQIEGCBAkSJIgIIWRFetroyuqGnp0yfmanZom/MX5mpmbzWX3mOHPjmjiJRGIl3RDD
        g/xPRp9VmSPXrU5GN66gja0ELeES1/03hmGspi+aaFNLoRvFXC63imtbyeZn9sINLUhm+tUerm1lIj97
        GC1eGDjga5ATc+XaVlITk6fQ4tK9Tl+DnMZy+kmubSWZenkDLUZD/QRyejae7uHaVp4+f3ETLUZD/QRy
        Yq5c24p0Afc7SCneQcyhDlIcCy3B/jbp/0r3wXqPQU7uFEDlzCSV1ttJcXoZ8u3EHGRFUNAMD0BOzgt4
        ROUz9N1G0gAzS+kHczwAOTkr4BE9vXNYtCZ0T+lhxSwPQE6OCjBfNv7OV2KOh6rmNRvkJF8AvbEhMTuU
        Bry9HyAn6QKcvPsCNqN8ph0KkY1k8cZmYt5ZD19HICe5Auj1W5zCUragM2TuBYXoBvL16jby5cp2stiz
        peESkJNcAarz019QUuxdBuXygkZLQE5yBbhw/QtK8X8PshZI3k4JyEmqAFNzsQCt+kARteQF9UpATnJn
        AH2QQTIyNPJQ1Ii8oFYJyEmuAEpxorFPge/D6+D/l8jW/xSwIy9YrgTkJF2AmaxfwNeHa8ibY23kY+8q
        +DqbUT6zEhl5ASoBOUkXwL4AFSeXL0HIvz7yl6oSJun1X+MbYiG6UVpeUFkCcpIvgKHi54FK+aoS6B52
        I62ax3FDXlBeAnJyVgDFpI+z5SUsJy9gJZgJb+QFogTk5LgAhkkfZorpUF15waeLq+EcJ9d8PRavb67y
        YbhSAONbz7qG5AWVJRRuUflrW+HBuwVycqWAJfmjWLQWogQv5BnIyXEBsvKChQtrPZFnICdHBTiVF8yf
        6YAH7DbISboAt+QFXpSAnKQKcFteMN8dggfuFsjJdgHNkhc0swTkZKuAZssLmlUCcrJVgBfygmbcE5CT
        rQLQgTYTt88E5PRfF8BwswTk9N8XwHCrBOTkiwIYbpSAnHxTAMNpCcjJVwUwnJSAnGABg6nxXrT4/flN
        dZnr7iRzp0NN5cPVHeRz727bIKdB6sq1rSRGUy3/I0lBbGTsMte2cice70rnZ+CGVoI53o7FTnBtK2FF
        OTgwmoKbWon46BhhrlzbSp+i7IqoGkm+yMCNrUByPE0iWoyENW0n17bCfkoeUbR3rIQnyWEyksmRtG7A
        QX6CnfIj6Rx5PDRMmFtY1d5y5epEVXV/WFF/s4UtiaL+imraPq6LE36iHaElFOAAf/MjoiiHuGbt9PX3
        r48q2rmwoj2gp0zC11CHiKqevZtIdHK9IEGCBAnyN21tfwDvQ9OYVM52wAAAAABJRU5ErkJggg==
</value>
  </data>
</root>